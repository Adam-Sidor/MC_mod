package com.example.adventuremod.blocks;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.VoxelShape;

public interface BrewmastersTableShapes {

    VoxelShape SHAPE_NORTH = Shapes.or(
            Block.box(11, 8, 11, 14, 9, 14),
            Block.box(11, 9, 14, 14, 13, 15),
            Block.box(11, 9, 10, 14, 13, 11),
            Block.box(14, 9, 11, 15, 13, 14),
            Block.box(10, 10, 14, 11, 12, 15),
            Block.box(10, 10, 10, 11, 12, 11),
            Block.box(14, 10, 14, 15, 12, 15),
            Block.box(14, 10, 10, 15, 12, 11),
            Block.box(10, 9, 11, 11, 13, 14),
            Block.box(1, 0, 1, 3, 6, 3),
            Block.box(13, 0, 1, 15, 6, 3),
            Block.box(13, 0, 13, 15, 6, 15),
            Block.box(1, 0, 13, 3, 6, 15),
            Block.box(0, 6, 0, 16, 8, 16),
            Block.box(2, 9, 8, 3, 10, 10),
            Block.box(5, 9, 8, 6, 10, 10),
            Block.box(3, 8, 8, 5, 9, 10),
            Block.box(3, 9, 7, 5, 10, 8),
            Block.box(3, 9, 10, 5, 10, 11),
            Block.box(2, 10, 7, 6, 14, 8),
            Block.box(2, 10, 10, 6, 14, 11),
            Block.box(5, 10, 7, 6, 14, 11),
            Block.box(2, 10, 7, 3, 14, 11),
            Block.box(3, 14, 8, 5, 15, 10),
            Block.box(3, 15, 8, 5, 16, 10),
            Block.box(8, 8, 3, 11, 9, 6),
            Block.box(8, 9, 6, 11, 15, 7),
            Block.box(8, 9, 2, 11, 15, 3),
            Block.box(11, 9, 3, 12, 15, 6),
            Block.box(7, 10, 6, 8, 14, 7),
            Block.box(7, 10, 2, 8, 14, 3),
            Block.box(11, 10, 6, 12, 14, 7),
            Block.box(11, 10, 2, 12, 14, 3),
            Block.box(7, 9, 3, 8, 15, 6),
            Block.box(12, 9, 4, 14, 10, 5),
            Block.box(12, 14, 4, 14, 15, 5),
            Block.box(14, 10, 4, 15, 14, 5),
            Block.box(8, 9, 3, 11, 14, 6)
    );

    VoxelShape SHAPE_EAST = Shapes.or(
            Block.box(11, 8, 2, 14, 9, 5),
            Block.box(14, 9, 2, 15, 13, 5),
            Block.box(10, 9, 2, 11, 13, 5),
            Block.box(11, 9, 5, 14, 13, 6),
            Block.box(10, 10, 1, 11, 12, 2),
            Block.box(10, 10, 5, 11, 12, 6),
            Block.box(14, 10, 1, 15, 12, 2),
            Block.box(14, 10, 5, 15, 12, 6),
            Block.box(11, 9, 1, 12, 13, 2),
            Block.box(13, 0, 1, 15, 6, 3),
            Block.box(13, 0, 13, 15, 6, 15),
            Block.box(1, 0, 1, 3, 6, 3),
            Block.box(1, 0, 13, 3, 6, 15),
            Block.box(0, 6, 0, 16, 8, 16),
            Block.box(8, 9, 8, 9, 10, 10),
            Block.box(8, 9, 5, 9, 10, 7),
            Block.box(8, 8, 8, 9, 9, 10),
            Block.box(7, 9, 7, 8, 10, 10),
            Block.box(7, 9, 10, 8, 10, 11),
            Block.box(6, 10, 7, 8, 14, 10),
            Block.box(6, 10, 4, 8, 14, 5),
            Block.box(5, 10, 7, 7, 14, 10),
            Block.box(6, 10, 7, 8, 14, 10),
            Block.box(8, 14, 6, 10, 15, 8),
            Block.box(8, 15, 7, 10, 16, 8),
            Block.box(8, 9, 3, 11, 14, 6)
    );

    VoxelShape SHAPE_SOUTH = Shapes.or(
            Block.box(2, 8, 2, 5, 9, 5),
            Block.box(2, 9, 1, 5, 13, 2),
            Block.box(2, 9, 5, 5, 13, 6),
            Block.box(5, 9, 2, 6, 13, 5),
            Block.box(6, 10, 1, 7, 12, 2),
            Block.box(6, 10, 5, 7, 12, 6),
            Block.box(2, 10, 1, 3, 12, 2),
            Block.box(2, 10, 5, 3, 12, 6),
            Block.box(5, 9, 2, 6, 13, 5),
            Block.box(13, 0, 13, 15, 6, 15),
            Block.box(1, 0, 13, 3, 6, 15),
            Block.box(1, 0, 1, 3, 6, 3),
            Block.box(13, 0, 1, 15, 6, 3),
            Block.box(0, 6, 0, 16, 8, 16),
            Block.box(13, 9, 6, 14, 10, 8),
            Block.box(10, 9, 6, 11, 10, 8),
            Block.box(12, 8, 6, 14, 9, 8),
            Block.box(12, 9, 7, 14, 10, 8),
            Block.box(12, 9, 4, 14, 10, 5),
            Block.box(9, 10, 7, 13, 14, 8),
            Block.box(9, 10, 4, 13, 14, 5),
            Block.box(9, 10, 5, 10, 14, 7),
            Block.box(9, 10, 5, 13, 14, 7),
            Block.box(12, 14, 6, 14, 15, 8),
            Block.box(13, 15, 7, 15, 16, 8),
            Block.box(8, 9, 3, 11, 14, 6)

    );

    VoxelShape SHAPE_WEST = Shapes.or(
            Block.box(2, 8, 11, 5, 9, 14),
            Block.box(2, 9, 11, 5, 13, 14),
            Block.box(2, 9, 14, 5, 13, 15),
            Block.box(5, 9, 11, 6, 13, 14),
            Block.box(6, 10, 14, 7, 12, 15),
            Block.box(6, 10, 10, 7, 12, 11),
            Block.box(2, 10, 14, 3, 12, 15),
            Block.box(2, 10, 10, 3, 12, 11),
            Block.box(5, 9, 11, 6, 13, 14),
            Block.box(13, 0, 1, 15, 6, 3),
            Block.box(13, 0, 13, 15, 6, 15),
            Block.box(1, 0, 1, 3, 6, 3),
            Block.box(1, 0, 13, 3, 6, 15),
            Block.box(0, 6, 0, 16, 8, 16),
            Block.box(2, 9, 8, 3, 10, 10),
            Block.box(5, 9, 8, 6, 10, 10),
            Block.box(3, 8, 8, 5, 9, 10),
            Block.box(3, 9, 7, 5, 10, 8),
            Block.box(3, 9, 10, 5, 10, 11),
            Block.box(2, 10, 7, 6, 14, 8),
            Block.box(2, 10, 10, 6, 14, 11),
            Block.box(5, 10, 7, 6, 14, 11),
            Block.box(2, 10, 7, 3, 14, 11),
            Block.box(3, 14, 8, 5, 15, 10),
            Block.box(3, 15, 8, 5, 16, 10),
            Block.box(8, 8, 3, 11, 9, 6)
    );
}
